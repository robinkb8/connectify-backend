# config/settings.py - COMPLETE UPDATED VERSION

"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f_r=5^5qg2m#(14-a-c(ay!rs2z(v_xwro2r&5n-5e2pqep5q8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# =====================================================
# CORS CONFIGURATION - ALLOW REACT TO CALL DJANGO
# =====================================================

# Allow React app to make requests to Django
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # React development server
    "http://127.0.0.1:3000",  # Alternative localhost format
]

# Allow credentials (cookies, auth headers) in CORS requests
CORS_ALLOW_CREDENTIALS = True

# Allow all headers in CORS requests (for Content-Type: application/json)
CORS_ALLOW_ALL_HEADERS = True

# =====================================================
# APPLICATION DEFINITION
# =====================================================

INSTALLED_APPS = [
    # Django built-in apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # ✅ THIRD PARTY APPS - ADD THESE
    'rest_framework',     # Django REST Framework for API
    'corsheaders',        # CORS headers for React communication
    
    # ✅ OUR CUSTOM APPS
    'core',               # Core app (if you have one)
    'authentication',     # Our authentication app with User model
]

# =====================================================
# MIDDLEWARE CONFIGURATION
# =====================================================

MIDDLEWARE = [
    # ✅ CORS MIDDLEWARE - MUST BE FIRST
    'corsheaders.middleware.CorsMiddleware',
    
    # Django built-in middleware
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# =====================================================
# DATABASE CONFIGURATION
# =====================================================

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME', default='connectify_aws'),
        'USER': config('DB_USER', default='postgres'),
        'PASSWORD': config('DB_PASSWORD', default='N4qhtnqd123'),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('DB_PORT', default='5432'),
    }
}
# =====================================================
# DJANGO REST FRAMEWORK CONFIGURATION
# =====================================================

REST_FRAMEWORK = {
    # Default renderer classes (what format to return)
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',  # Always return JSON
    ],
    
    # Default parser classes (what format to accept)
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',      # Accept JSON from React
    ],
    
    # Default permissions (who can access API)
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',    # No auth required for now
    ],
    
    # Pagination settings
    'PAGE_SIZE': 20,  # Return 20 items per page by default
}

# =====================================================
# PASSWORD VALIDATION
# =====================================================

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# =====================================================
# INTERNATIONALIZATION
# =====================================================

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# =====================================================
# STATIC FILES (CSS, JavaScript, Images)
# =====================================================

STATIC_URL = 'static/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ✅ CUSTOM USER MODEL - TELL DJANGO TO USE OUR USER MODEL
AUTH_USER_MODEL = 'authentication.User'

# =====================================================
# DEVELOPMENT SETTINGS - FOR DEBUGGING
# =====================================================

# Print SQL queries in console (helpful for debugging)
if DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'loggers': {
            'django.db.backends': {
                'handlers': ['console'],
                'level': 'DEBUG' if DEBUG else 'INFO',
            },
        },
    }


# ✅ AWS SES Configuration - FIXED
EMAIL_BACKEND = 'django_ses.SESBackend'

# config/settings.py - SMTP BACKEND
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'email-smtp.eu-north-1.amazonaws.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('AWS_ACCESS_KEY_ID')      
EMAIL_HOST_PASSWORD = config('AWS_SECRET_ACCESS_KEY')  
DEFAULT_FROM_EMAIL = 'rob063838@gmail.com'

# Email settings
DEFAULT_FROM_EMAIL = 'rob063838@gmail.com'
SERVER_EMAIL = DEFAULT_FROM_EMAIL